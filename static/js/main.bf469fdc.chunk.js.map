{"version":3,"sources":["auth/AuthContext.js","types/types.js","auth/authReducer.js","components/login/LoginScreen.js","data/heroes.js","components/heroes/HeroCard.js","components/heroes/HeroList.js","selectors/getHeroByPublisher.js","components/dc/DcScreen.js","components/heroes/HeroScreen.js","selectors/getHeroById.js","components/marvel/MarvelScreen.js","components/search/SearchScreen.js","hooks/FromHook.js","selectors/getHeroByName.js","components/ui/Navbar.js","routers/DashboardRoutes.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","HeroesApp.js","index.js"],"names":["AuthContext","createContext","types","authReducer","state","action","type","payload","logged","LoginScreen","history","lastPath","localStorage","getItem","dispatch","useContext","className","onClick","name","replace","heroes","HeroCard","id","superhero","alter_ego","publisher","first_appearance","characters","style","maxWidth","src","alt","to","HeroList","useMemo","includes","Error","filter","hero","getHeroByPublisher","map","DcScreen","HeroScreen","heroId","useParams","find","length","push","goBack","MarvelScreen","SearchScreen","location","useLocation","queryString","parse","search","q","initialState","useState","formulary","setformulary","handleInputChange","target","value","useForm","values","handleImputChange","heroesFiltered","toLocaleLowerCase","onSubmit","event","preventDefault","placeholder","onChange","ket","Navbar","user","useHistory","activeClassName","exact","DashboardRoutes","path","component","PrivateRoute","isAuthenticated","Component","rest","setItem","pathname","props","PublicRoute","AppRouter","init","JSON","HeroesApp","useReducer","useEffect","stringify","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bf469fdc.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext ();","\r\n\r\nexport const types = {\r\n   \r\n    login: \"[auth] login\",\r\n    logout: \"[auth] logout\"\r\n}\r\n","import React from 'react'\r\nimport { types } from '../types/types';\r\n\r\n//estado si el usuario esta autenticado\r\n// const state = {\r\n//     name: \"Lorenzo\",\r\n//     logged: true\r\n// }\r\n\r\n\r\n// const ejAction = {\r\n\r\n//     type : \"login\",\r\n//     payload : {\r\n//         name : \"newname\",\r\n//         logged : true or false\r\n//     }\r\n// }\r\n\r\n\r\nexport const authReducer = (state = {}, action ) => {\r\n   \r\n\r\n    switch (action.type) {\r\n        case  types.login:\r\n            \r\n            return {\r\n              ...action.payload,\r\n              logged : true\r\n          }\r\n          \r\n        case types.logout:\r\n            \r\n            return{\r\n                logged:false\r\n            }\r\n\r\n        default:\r\n        return state;\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\n","import React, { useContext, useReducer } from 'react';\r\nimport { AuthContext } from '../../auth/AuthContext';\r\nimport { authReducer } from '../../auth/authReducer';\r\nimport { types } from '../../types/types';\r\n\r\n\r\n\r\n\r\nexport const LoginScreen = ({history}) => {\r\n\r\n    const lastPath = localStorage.getItem(\"lastPath\") || \"/\";\r\n\r\n\r\n    const {name} = {\r\n        name:\"Lorenzo\"\r\n    }\r\n   \r\n    const {dispatch} = useContext(AuthContext);\r\n\r\n  \r\n    const handleLogin = ()=>{\r\n        // history.push(\"/\"); \r\n       \r\n        const login = {\r\n            type : types.login,\r\n            payload:{name}\r\n        }\r\n\r\n        dispatch(login)\r\n        history.replace(lastPath);\r\n    } \r\n\r\n\r\n    return (\r\n        <div className = \"container mt-5\">\r\n            <h1>Login</h1>\r\n            <hr />\r\n        \r\n            <button \r\n            className= \"btn btn-secondary\"\r\n            onClick = {handleLogin}\r\n            >\r\n               Login  \r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","export const heroes = [\r\n    {\r\n        'id': 'dc-batman',\r\n        'superhero':'Batman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Bruce Wayne',\r\n        'first_appearance':'Detective Comics #27',\r\n        'characters':'Bruce Wayne'\r\n    },\r\n    {\r\n        'id': 'dc-superman',\r\n        'superhero':'Superman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Kal-El',\r\n        'first_appearance':'Action Comics #1',\r\n        'characters':'Kal-El'\r\n    },\r\n    {\r\n        'id': 'dc-flash',\r\n        'superhero':'Flash', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Jay Garrick',\r\n        'first_appearance':'Flash Comics #1',\r\n        'characters':'Jay Garrick, Barry Allen, Wally West, Bart Allen'\r\n    },\r\n    {\r\n        'id': 'dc-green',\r\n        'superhero':'Green Lantern', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Alan Scott',\r\n        'first_appearance':'All-American Comics #16',\r\n        'characters':'Alan Scott, Hal Jordan, Guy Gardner, John Stewart, Kyle Raynor, Jade, Sinestro, Simon Baz'\r\n    },\r\n    {\r\n        'id': 'dc-arrow',\r\n        'superhero':'Green Arrow', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Oliver Queen',\r\n        'first_appearance':'More Fun Comics #73',\r\n        'characters':'Oliver Queen'\r\n    },\r\n    {\r\n        'id': 'dc-wonder',\r\n        'superhero':'Wonder Woman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Princess Diana',\r\n        'first_appearance':'All Star Comics #8',\r\n        'characters':'Princess Diana'\r\n    },\r\n    {\r\n        'id': 'dc-martian',\r\n        'superhero':'Martian Manhunter', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'J\\'onn J\\'onzz',\r\n        'first_appearance':'Detective Comics #225',\r\n        'characters':'Martian Manhunter'\r\n    },\r\n    {\r\n        'id': 'dc-robin',\r\n        'superhero':'Robin/Nightwing', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dick Grayson',\r\n        'first_appearance':'Detective Comics #38',\r\n        'characters':'Dick Grayson'\r\n    },\r\n    {\r\n        'id': 'dc-blue',\r\n        'superhero':'Blue Beetle', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dan Garret',\r\n        'first_appearance':'Mystery Men Comics #1',\r\n        'characters':'Dan Garret, Ted Kord, Jaime Reyes'\r\n    },\r\n    {\r\n        'id': 'dc-black',\r\n        'superhero':'Black Canary', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dinah Drake',\r\n        'first_appearance':'Flash Comics #86',\r\n        'characters':'Dinah Drake, Dinah Lance'\r\n    },\r\n    {\r\n        'id': 'marvel-spider',\r\n        'superhero':'Spider Man', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Peter Parker',\r\n        'first_appearance':'Amazing Fantasy #15',\r\n        'characters':'Peter Parker'\r\n    },\r\n    {\r\n        'id': 'marvel-captain',\r\n        'superhero':'Captain America', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Steve Rogers',\r\n        'first_appearance':'Captain America Comics #1',\r\n        'characters':'Steve Rogers'\r\n    },\r\n    {\r\n        'id': 'marvel-iron',\r\n        'superhero':'Iron Man', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Tony Stark',\r\n        'first_appearance':'Tales of Suspense #39',\r\n        'characters':'Tony Stark'\r\n    },\r\n    {\r\n        'id': 'marvel-thor',\r\n        'superhero':'Thor', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Thor Odinson',\r\n        'first_appearance':'Journey into Myster #83',\r\n        'characters':'Thor Odinson'\r\n    },\r\n    {\r\n        'id': 'marvel-hulk',\r\n        'superhero':'Hulk', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Bruce Banner',\r\n        'first_appearance':'The Incredible Hulk #1',\r\n        'characters':'Bruce Banner'\r\n    },\r\n    {\r\n        'id': 'marvel-wolverine',\r\n        'superhero':'Wolverine', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'James Howlett',\r\n        'first_appearance':'The Incredible Hulk #180',\r\n        'characters':'James Howlett'\r\n    },\r\n    {\r\n        'id': 'marvel-daredevil',\r\n        'superhero':'Daredevil', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Matthew Michael Murdock',\r\n        'first_appearance':'Daredevil #1',\r\n        'characters':'Matthew Michael Murdock'\r\n    },\r\n    {\r\n        'id': 'marvel-hawkeye',\r\n        'superhero':'Hawkeye', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Clinton Francis Barton',\r\n        'first_appearance':'Tales of Suspense #57',\r\n        'characters':'Clinton Francis Barton'\r\n    },\r\n    {\r\n        'id': 'marvel-cyclops',\r\n        'superhero':'Cyclops', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Scott Summers',\r\n        'first_appearance':'X-Men #1',\r\n        'characters':'Scott Summers'\r\n    },\r\n    {\r\n        'id': 'marvel-silver',\r\n        'superhero':'Silver Surfer', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Norrin Radd',\r\n        'first_appearance':'The Fantastic Four #48',\r\n        'characters':'Norrin Radd'\r\n    }\r\n]","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport const HeroCard = ({\r\n    id,\r\n    superhero,\r\n    publisher,\r\n    alter_ego,\r\n    first_appearance,\r\n    characters\r\n}) => {\r\n    return (\r\n        \r\n        <div className = \"card ms-3\" style = {{maxWidth: 540}}>\r\n            <div className= \"row no-gutters\">\r\n                <div className= \"col-md-4\">\r\n                    <img src= {`./assets/heroes/${id}.jpg`} className=\"card-img\" alt = {superhero} />\r\n                </div>\r\n                <div className= \"col-md-8\">\r\n                    <div className= \"card-body\"> \r\n                        <h5 className = \"card-title\">{superhero} </h5>\r\n                        <p className = \"card-text\"> {alter_ego} </p>\r\n                            {\r\n                                (alter_ego !== characters) && <p className = \"card-text\">{characters}</p>\r\n                            }\r\n                        <p className = \"card-text\"> \r\n                            <small className = \"text-muted\"> {first_appearance}</small>\r\n                        </p>\r\n                        <Link className =\"link-secondary\" to= {`./hero/${id}`}>\r\n                            Más...\r\n                        </Link>  \r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useMemo } from 'react'\r\nimport { getHeroByPublisher } from '../../selectors/getHeroByPublisher'\r\nimport { HeroCard } from './HeroCard';\r\n\r\n//publisher viene del file heroes.\r\nexport const HeroList = ({publisher}) => {\r\n\r\n    const heroes = useMemo(() =>  getHeroByPublisher(publisher), [publisher]);\r\n\r\n    \r\n\r\n    return (\r\n        \r\n            <div className=\"card columns animate__animated animate__fadeIn\">\r\n        \r\n            {heroes.map( hero => (\r\n                    <HeroCard key= {hero.id}\r\n                            {...hero}\r\n                            //   superhero=  {hero.superhero} //podría hacerlo así con cada uno de los props, pero usando los tres puntos que como si lo hago con todos.\r\n                    />\r\n                ))\r\n            }\r\n        </div>\r\n        \r\n    )\r\n}\r\n","import { heroes } from \"../data/heroes\";\r\n\r\n\r\n\r\nexport const getHeroByPublisher = (publisher) => {\r\n\r\n    const validPubishers = [\"DC Comics\", \"Marvel Comics\"];\r\n\r\n    //includes me sirve para comparar \"publisher\"(que es lo que el usuario envio como argumento)\r\n    //con lo que tengo en el validPunisher.\r\n\r\n    if(!validPubishers.includes(publisher)){\r\n        throw new Error(`${publisher} does not exist`)\r\n    }\r\n    //retorno los correctos\r\n    return heroes.filter( hero => hero.publisher === publisher);\r\n\r\n  \r\n}\r\n","\r\nimport React from 'react'\r\nimport { HeroList } from '../heroes/HeroList'\r\n\r\nexport const DcScreen = () => {\r\n    return (\r\n        <div>\r\n            <h1>Dc screen</h1>\r\n            <hr />\r\n            <HeroList publisher= {\"DC Comics\"} />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useMemo } from 'react'\r\nimport { Redirect, useParams } from 'react-router'\r\nimport { getHeroById } from '../../selectors/getHeroById';\r\n\r\nexport const HeroScreen = ({history}) => {\r\n\r\n    // este useParam es un customHook de react que sirve para obtener informacion de esa lista de \r\n    // items que encuentro en el components de mi sitio web. heroId es uno de esos items.\r\n    //useParam va a extraer los parametros que vayan por el URL.\r\n\r\n    const {heroId} = useParams();\r\n\r\n    const hero = useMemo(() =>  getHeroById(heroId), [heroId])\r\n    \r\n\r\n    if (!hero){\r\n        return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    const handleReturn = ()=>{\r\n        if(history.length <= 2){\r\n            history.push(\"/\");\r\n        }else{\r\n            history.goBack();\r\n        }\r\n\r\n    // this history.goBack() is inside of HeroScreen in components in the console. There I´ll find the different acctions \r\n    //that I can carry out with my button. \r\n       \r\n        \r\n    } \r\n\r\n    const {\r\n        superhero,\r\n        publisher,\r\n        alter_ego,\r\n        first_appearance,\r\n        characters,\r\n    } = hero\r\n    \r\n   \r\n\r\n\r\n    return (\r\n        <div className=\"row mt-5\">\r\n            <div className = \"col-4\"> \r\n                <img\r\n                src={`../assets/heroes/${heroId}.jpg`}\r\n                alt = {superhero}\r\n                className = \"img-thumbnail animate__animated animate__fadeInLeft\"\r\n                />\r\n             \r\n            </div>\r\n            <div className = \"col-8\">\r\n            <h3>{superhero}</h3>\r\n            <ul className= \"list-group list-group-flush\">\r\n                <li className = \"list-group-item\"><b>Alter ego:</b> {alter_ego}</li>\r\n                <li className = \"list-group-item\"><b>publisher:</b> {publisher}</li>\r\n                <li className = \"list-group-item\"><b>first appearance:</b> {first_appearance}</li>\r\n            </ul>\r\n\r\n            <h5> characters: </h5>\r\n            <p>{characters} </p>\r\n\r\n            <button \r\n                className=\"btn btn-outline-info\"\r\n                onClick = {handleReturn}\r\n                >\r\n                Return\r\n\r\n            </button>\r\n\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import { heroes } from \"../data/heroes\";\r\n\r\n\r\n\r\nexport const getHeroById = (id) => {\r\n\r\n\r\n    //apenas encuentra uno, lo devuelve. No filtra como el otro.\r\n    return heroes.find( hero => hero.id === id);\r\n  \r\n}","import React from 'react'\r\nimport { HeroList } from '../heroes/HeroList'\r\n\r\n\r\nexport const MarvelScreen = () => {\r\n    return (\r\n        <div>\r\n            <h1>Marvel screen</h1>\r\n            <hr />\r\n            <HeroList publisher= {\"Marvel Comics\"} />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useMemo } from 'react'\r\nimport { useLocation } from 'react-router';\r\nimport { useForm } from '../../hooks/FromHook';\r\nimport { HeroCard } from '../heroes/HeroCard';\r\nimport queryString from \"query-string\";\r\nimport { getHeroByName } from '../../selectors/getHeroByName';\r\n\r\nexport const SearchScreen = ({history}) => {\r\n    const location = useLocation();\r\n    const {q = \"\"} = queryString.parse(location.search);\r\n   \r\n\r\n\r\n    const [values, handleImputChange,] = useForm({ \r\n        superhero: q , \r\n    });\r\n    \r\n    const {superhero} = values\r\n    //superhero es el value del imput\r\n\r\n    const heroesFiltered = useMemo(() => getHeroByName (q), [q])\r\n    \r\n\r\n    const handleSearch = (event)=> {\r\n        event.preventDefault();\r\n        history.push(`?q=${superhero}`);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Search Screen </h1>\r\n            <hr />\r\n            <div className = \" row\">\r\n\r\n                <div className = \"col-5\">\r\n                    <h4> Search form</h4>\r\n                    <hr />\r\n\r\n                    <form onSubmit = {handleSearch} >\r\n                       <input \r\n                       type = \"text\"\r\n                       name = \"superhero\"\r\n                       value = {superhero}\r\n                       placeholder = \"Find your hero\"\r\n                       className = \" form-control\"\r\n                       onChange = {handleImputChange}\r\n                       />\r\n                        <button\r\n                        type = \"submit\"\r\n                        className = \"btn m-1 btn-outline-primary btn-block\"\r\n                        >\r\n                            Search...\r\n                        </button>\r\n\r\n                    </form>\r\n                </div>\r\n\r\n                <div className = \"col-7\">\r\n\r\n                <h4> Results</h4>\r\n                <hr />\r\n\r\n                {\r\n                    (q === \"\") &&\r\n                    <div className = \"alert alert-info\"> \r\n                        searcha a hero\r\n                    </div>\r\n                }\r\n                {\r\n                    (q !== \"\" && heroesFiltered.length === 0) &&\r\n                    <div className = \"alert alert-danger\"> \r\n                        there is not a hero with {q} name.\r\n                    </div>\r\n                }\r\n\r\n\r\n\r\n                {\r\n                    heroesFiltered.map(hero => (\r\n                        <HeroCard\r\n                            ket = {hero.id}\r\n                            {...hero}\r\n\r\n                        />\r\n                    ))\r\n                }\r\n\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from \"react\";\r\n\r\n\r\nexport const useForm = (initialState={}) => {\r\n    \r\n    const [formulary, setformulary] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setformulary(initialState);\r\n    }\r\n    \r\n    const handleInputChange = ({target})=>{\r\n        setformulary({\r\n            ...formulary,\r\n            [target.name] : target.value\r\n        });\r\n    };\r\n    \r\n    return [formulary , handleInputChange, reset]\r\n}\r\n","import React from 'react'\r\nimport { heroes } from '../data/heroes'\r\n\r\n\r\nexport const getHeroByName = (name) => {\r\n    name = name.toLocaleLowerCase();\r\n\r\n    if (name === \"\"){\r\n        return []\r\n    }else{\r\n        return heroes.filter(hero=> hero.superhero.toLocaleLowerCase().includes(name))\r\n    }\r\n      \r\n}\r\n\r\n","import React, { useContext } from 'react';\r\nimport { Link, NavLink , useHistory } from 'react-router-dom';\r\nimport { AuthContext } from '../../auth/AuthContext';\r\nimport { types } from '../../types/types';\r\n\r\nexport const Navbar = () => {\r\n\r\n    const {user: {name}, dispatch} =  useContext(AuthContext);\r\n\r\n    // no puedo usar history como en el login por que el logout este dentro de las\r\n    //dashboardroutes las cuales estan creadas dentro de un Navar y no dentro de un \r\n    // router el cual podría brindarnos ese history, por eso react creó el hook useHistory\r\n    // para estas ocaciones, donde esta el replece, y otros usos.\r\n\r\n    const history = useHistory();\r\n\r\n    const handleLogout = ()=>{\r\n\r\n        const logout = {\r\n            type : types.logout,\r\n        }\r\n        dispatch(logout)\r\n        history.replace(\"/login\")\r\n        \r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark \">\r\n          <div className = \"navbar-nav p-2\">\r\n            <Link \r\n                className=\"navbar-brand \" \r\n                to=\"/\"\r\n            >\r\n                Asociaciones\r\n            </Link>\r\n            </div>\r\n\r\n            <div className=\"navbar-collapse\">\r\n                <div className=\"navbar-nav\">\r\n\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/marvel\"\r\n                    >\r\n                        Marvel\r\n                    </NavLink>\r\n\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/dc\"\r\n                    >\r\n                        DC\r\n                    </NavLink>\r\n\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/search\"\r\n                    >\r\n                        Search\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n\r\n            {/* <div className=\"navbar-collapse collapse w-100 order-3 dual-collapse2\"> */}\r\n                <ul className=\"navbar-nav ml-auto\">\r\n\r\n                    <span className = \"nav-item nav-link text-info\" >\r\n                            {name}\r\n                    </span>\r\n                \r\n                    <button \r\n                    \r\n                        className=\"nav-item nav-link btn\" \r\n                        onClick = {handleLogout}\r\n                    >\r\n                        Logout\r\n                    </button>\r\n                </ul>\r\n            {/* </div> */}\r\n          \r\n        </nav>\r\n    )\r\n}","import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router'\r\nimport { DcScreen } from '../components/dc/DcScreen'\r\nimport { HeroScreen } from '../components/heroes/HeroScreen'\r\nimport { MarvelScreen } from '../components/marvel/MarvelScreen'\r\nimport { SearchScreen } from '../components/search/SearchScreen'\r\nimport { Navbar } from '../components/ui/Navbar'\r\n\r\n//Entre el sistema de rutas principal y uno secundarion, lo unico que la prncipal tiene un router\r\n\r\n\r\nexport const DashboardRoutes = () => {\r\n    return (\r\n        <>\r\n            <Navbar />  \r\n            <div className = \"container-fluid mt-2 \" >\r\n                <Switch>\r\n                <Route exact path =\"/marvel\" component={MarvelScreen} />\r\n                <Route exact path =\"/hero/:heroId\" component={HeroScreen} />\r\n                <Route exact path =\"/dc\" component={DcScreen} />\r\n                <Route exact path =\"/search\" component={SearchScreen} />\r\n\r\n\r\n                <Redirect to=\"/marvel\" />\r\n                </Switch>\r\n\r\n            </div>\r\n            \r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router';\r\nimport PropTypes from 'prop-types';\r\n\r\n// ...rest , esto representa al path, exact y todas las caractreristicas que veo y uso dentro del <Route />.\r\n\r\nconst PrivateRoute =({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    localStorage.setItem(\"lastPath\", rest.location.pathname)\r\n    return(\r\n        <Route {...rest} \r\n        component = { (props) => (\r\n\r\n            (isAuthenticated)\r\n                ? (<Component {...props} />)\r\n                : (<Redirect to = \"/login\" />)\r\n\r\n        ) }\r\n        />\r\n \r\n    )\r\n\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n\r\n// el props representa a todos los props que he utilizado lo largo de la aplicacion como, history, location, params, search, etc.  \r\n// componente con mayuscula representa al componente en si , ejemplo a AppRouter.js. \r\n\r\nexport default PrivateRoute\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return(\r\n        <Route {...rest} \r\n        component = { (props) => (\r\n\r\n            (!isAuthenticated)\r\n                ? (<Component {...props} />)\r\n                : (<Redirect to = \"/\" />)\r\n\r\n\r\n        ) }\r\n        />\r\n\r\n\r\n        \r\n    )\r\n  \r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n\r\nexport default PublicRoute\r\n","import React, { useContext } from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    \r\n  } from \"react-router-dom\";\r\nimport { AuthContext } from '../auth/AuthContext';\r\nimport { LoginScreen } from '../components/login/LoginScreen';\r\n\r\nimport { DashboardRoutes } from './DashboardRoutes';\r\nimport PrivateRoute from './PrivateRoute';\r\nimport PublicRoute from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n  \r\n  const {user} = useContext(AuthContext)\r\n\r\n    return (\r\n        <Router>\r\n          <div >\r\n    \r\n            <Switch>\r\n                <PublicRoute\r\n                  exact path =\"/login\" \r\n                  component={LoginScreen}\r\n                  isAuthenticated = {user.logged} />\r\n\r\n                <PrivateRoute\r\n                  path =\"/\" \r\n                  component={DashboardRoutes} \r\n                  isAuthenticated = {user.logged}\r\n\r\n                  />\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n      );\r\n    \r\n}\r\n\r\n","\r\nimport React, { useEffect, useReducer } from 'react'\r\nimport { AuthContext } from './auth/AuthContext'\r\nimport { authReducer } from './auth/authReducer'\r\nimport { AppRouter } from './routers/AppRouter'\r\n\r\n//este init busca a ver si ya hay alguien en este caso logeado, si no lo encuentra \r\n//queda en estado logout. Por eso busca en el localStorag que es un objeto que lo\r\n//veo con los componentes en lapagina web. los trangormo a JSON y asi puedo trabajarlo.\r\n\r\nconst init = ()=>{\r\n    return JSON.parse(localStorage.getItem(\"user\")) || {\r\n        logged:false\r\n    }\r\n}\r\n\r\nexport const HeroesApp = () => {\r\n\r\n    const [user, dispatch] = useReducer(authReducer, {}, init)\r\n\r\n    // en esta forma busco en el local storage el item \"user\" y le configuro el name que \r\n    // esta en user, este queda configurado con ese valor el cual va a cambiar solo si cambia \r\n    // el valor del user.\r\n    useEffect(() => {\r\n        localStorage.setItem(\"user\", JSON.stringify(user))\r\n    }, [user])\r\n   \r\n    return (\r\n        <>\r\n\r\n        <AuthContext.Provider value= {{user, dispatch}}>\r\n\r\n            <AppRouter />\r\n\r\n        </AuthContext.Provider>\r\n\r\n           \r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HeroesApp } from './HeroesApp';\n\n\nReactDOM.render(\n \n    <HeroesApp />,\n\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}